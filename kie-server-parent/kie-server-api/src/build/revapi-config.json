{
  "filters": {
    "revapi": {
      "java": {
        "filter": {
          "_comment": "We don't want to check transitive classes, e.g. from OptaPlanner, since we already check them in their own module.",
          "packages": {
            "regex": true,
            "include": [
              "org\\.kie\\.server\\.api.*"
            ]
          }
        }
      }
    }
  },

  "ignores": {
    "revapi": {
      "_comment": "Changes between 6.5.0.Final and master. These changes are desired and thus ignored. They should be removed when 7.0.0.Final is available.",
      "ignore": [
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.optaplanner.core.api.domain.solution.Solution org.kie.server.api.model.instance.SolverInstance::getBestSolution()",
          "new": "method java.lang.Object org.kie.server.api.model.instance.SolverInstance::getBestSolution()",
          "justification": "Removed deprecated interface usage."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.optaplanner.core.api.domain.solution.Solution org.kie.server.api.model.instance.SolverInstance::getPlanningProblem()",
          "new": "method java.lang.Object org.kie.server.api.model.instance.SolverInstance::getPlanningProblem()",
          "justification": "Removed deprecated interface usage."
        },
        {
          "code": "java.method.removed",
          "old": "method org.optaplanner.core.api.score.Score org.kie.server.api.model.instance.SolverInstance::getScore()",
          "justification": "Moved to org.kie.server.api.model.instance.ScoreWrapper.toScore()."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.kie.server.api.model.instance.SolverInstance::setBestSolution(===org.optaplanner.core.api.domain.solution.Solution===)",
          "new": "parameter void org.kie.server.api.model.instance.SolverInstance::setBestSolution(===java.lang.Object===)",
          "justification": "Removed deprecated interface usage in method parameter."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.kie.server.api.model.instance.SolverInstance::setPlanningProblem(===org.optaplanner.core.api.domain.solution.Solution===)",
          "new": "parameter void org.kie.server.api.model.instance.SolverInstance::setPlanningProblem(===java.lang.Object===)",
          "justification": "Removed deprecated interface usage in method parameter."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.kie.server.api.model.instance.SolverInstance::setScore(org.optaplanner.core.api.score.Score)",
          "justification": "Moved to org.kie.server.api.model.instance.SolverInstance.setScoreWrapper(org.kie.server.api.model.instance.ScoreWrapper)"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "field org.kie.server.api.commands.CommandScript.commands",
          "new": "field org.kie.server.api.commands.CommandScript.commands",
          "justification": "Because of getReleaseId method in KieServicesClient"
        },
        {
          "code": "java.annotation.added",
          "old": "field org.kie.server.api.commands.CommandScript.commands",
          "new": "field org.kie.server.api.commands.CommandScript.commands",
          "annotationType": "com.fasterxml.jackson.annotation.JsonTypeInfo",
          "elementKind": "annotation",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.annotation.removed",
          "old": "field org.kie.server.api.commands.CommandScript.commands",
          "new": "field org.kie.server.api.commands.CommandScript.commands",
          "annotationType": "org.codehaus.jackson.annotate.JsonTypeInfo",
          "elementKind": "annotation",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.field.typeChanged",
          "old": "field org.kie.server.api.marshalling.json.JSONMarshaller.deserializeObjectMapper",
          "new": "field org.kie.server.api.marshalling.json.JSONMarshaller.deserializeObjectMapper",
          "oldType": "org.codehaus.jackson.map.ObjectMapper",
          "newType": "com.fasterxml.jackson.databind.ObjectMapper",
          "package": "org.kie.server.api.marshalling.json",
          "classSimpleName": "JSONMarshaller",
          "fieldName": "deserializeObjectMapper",
          "elementKind": "field",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.field.typeChanged",
          "old": "field org.kie.server.api.marshalling.json.JSONMarshaller.objectMapper",
          "new": "field org.kie.server.api.marshalling.json.JSONMarshaller.objectMapper",
          "oldType": "org.codehaus.jackson.map.ObjectMapper",
          "newType": "com.fasterxml.jackson.databind.ObjectMapper",
          "package": "org.kie.server.api.marshalling.json",
          "classSimpleName": "JSONMarshaller",
          "fieldName": "objectMapper",
          "elementKind": "field",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method java.util.List<org.codehaus.jackson.map.jsontype.NamedType> org.kie.server.api.marshalling.json.JSONMarshaller::prepareCustomClasses(java.util.Set<java.lang.Class<?>>)",
          "new": "method java.util.List<com.fasterxml.jackson.databind.jsontype.NamedType> org.kie.server.api.marshalling.json.JSONMarshaller::prepareCustomClasses(java.util.Set<java.lang.Class<?>>)",
          "oldType": "java.util.List<org.codehaus.jackson.map.jsontype.NamedType>",
          "newType": "java.util.List<com.fasterxml.jackson.databind.jsontype.NamedType>",
          "package": "org.kie.server.api.marshalling.json",
          "classSimpleName": "JSONMarshaller",
          "methodName": "prepareCustomClasses",
          "elementKind": "method",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.annotation.added",
          "old": "class org.kie.server.api.model.ReleaseId",
          "new": "class org.kie.server.api.model.ReleaseId",
          "annotationType": "com.fasterxml.jackson.annotation.JsonIgnoreProperties",
          "elementKind": "annotation",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.annotation.removed",
          "old": "class org.kie.server.api.model.ReleaseId",
          "new": "class org.kie.server.api.model.ReleaseId",
          "annotationType": "org.codehaus.jackson.annotate.JsonIgnoreProperties",
          "elementKind": "annotation",
          "justification": "Upgrade Jackson library to version 2"
        },
        {
          "code": "java.annotation.added",
          "old": "class org.kie.server.api.model.ServiceResponse<T extends java.lang.Object>",
          "new": "class org.kie.server.api.model.ServiceResponse<T extends java.lang.Object>",
          "annotationType": "com.thoughtworks.xstream.annotations.XStreamAlias",
          "elementKind": "annotation",
          "justification": "DROOLS-1509 ServiceResponse XStream marshalling is with canonical name"
        }
       
      ]
    }
  }
}
