{
  "filters": {
    "revapi": {
      "java": {
        "filter": {
          "_comment": "We don't want to check transitive classes, e.g. from OptaPlanner, since we already check them in their own module.",
          "packages": {
            "regex": true,
            "include": [
              "org\\.kie\\.server\\.api.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.0.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.field.constantValueChanged",
          "old": "field org.kie.server.api.rest.RestURI.PROCESS_INSTANCES_BY_CONTAINER_GET_URI",
          "new": "field org.kie.server.api.rest.RestURI.PROCESS_INSTANCES_BY_CONTAINER_GET_URI",
          "oldValue": "processes/instances",
          "newValue": "instances",
          "package": "org.kie.server.api.rest",
          "classSimpleName": "RestURI",
          "fieldName": "PROCESS_INSTANCES_BY_CONTAINER_GET_URI",
          "elementKind": "field",
          "justification": "JBPM-6120 Invalid Kie Server REST endpoints for processes"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "new": "field org.kie.server.api.commands.CommandScript.commands",
          "attribute": "value",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "elementKind": "field",
          "justification": "PLANNER-815 Support real-time planning"
        },
        {
        "code": "java.method.removed",
        "old": "method java.lang.String org.kie.server.api.model.dmn.DMNContextKS::getDecisionId()",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNContextKS",
        "methodName": "getDecisionId",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.removed",
        "old": "method java.lang.String org.kie.server.api.model.dmn.DMNContextKS::getDecisionName()",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNContextKS",
        "methodName": "getDecisionName",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.removed",
        "old": "method void org.kie.server.api.model.dmn.DMNContextKS::setDecisionId(java.lang.String)",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNContextKS",
        "methodName": "setDecisionId",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.removed",
        "old": "method void org.kie.server.api.model.dmn.DMNContextKS::setDecisionName(java.lang.String)",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNContextKS",
        "methodName": "setDecisionName",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void org.kie.server.api.model.dmn.DMNResultKS::<init>(java.lang.String, java.lang.String, java.lang.String, org.kie.dmn.api.core.DMNResult)",
        "new": "method void org.kie.server.api.model.dmn.DMNResultKS::<init>(java.lang.String, java.lang.String, org.kie.dmn.api.core.DMNResult)",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNResultKS",
        "methodName": "<init>",
        "elementKind": "constructor",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.numberOfParametersChanged",
        "old": "method void org.kie.server.api.model.dmn.DMNResultKS::<init>(java.lang.String, java.lang.String, org.kie.dmn.api.core.DMNResult)",
        "new": "method void org.kie.server.api.model.dmn.DMNResultKS::<init>(java.lang.String, java.lang.String, java.util.List<java.lang.String>, org.kie.dmn.api.core.DMNResult)",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNResultKS",
        "methodName": "<init>",
        "elementKind": "constructor",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.removed",
        "old": "method java.lang.String org.kie.server.api.model.dmn.DMNResultKS::getDecisionName()",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNResultKS",
        "methodName": "getDecisionName",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        },
        {
        "code": "java.method.removed",
        "old": "method void org.kie.server.api.model.dmn.DMNResultKS::setDecisionName(java.lang.String)",
        "package": "org.kie.server.api.model.dmn",
        "classSimpleName": "DMNResultKS",
        "methodName": "setDecisionName",
        "elementKind": "method",
        "justification": "DROOLS-2073 Kie server API to evaluate multiple decisions by name/id"
        }
      ]
    }
  }
}
