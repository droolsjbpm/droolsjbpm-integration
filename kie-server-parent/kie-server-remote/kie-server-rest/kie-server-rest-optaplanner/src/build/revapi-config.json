{
  "filters": {
    "revapi": {
      "java": {
        "_comment": "Only classes with javax.ws.rs annotations are included since we want to check only REST API.",
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, e.g. from kie-server-api, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.kie\\.server\\.remote\\.rest\\.optaplanner.*"
            ],
            "exclude": [
              "org\\.kie\\.server\\.remote\\.rest\\.optaplanner\\.resources"
            ]
          },
          "classes": {
            "_comment": "Classes are excluded, not included, so new classes in future are discovered by revapi.",
            "regex": false,
            "exclude": [
              "org.kie.server.remote.rest.optaplanner.OptaplannerRestApplicationComponentsService"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 6.5.0.Final and master. These changes are desired and thus ignored. They should be removed when 7.0.0.Final is available.",
      "ignore": [
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::createSolver(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::createSolver(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String)",
          "attribute": "value",
          "oldValue": "\"/{solverId}\"",
          "newValue": "\"{solverId}\"",
          "annotationType": "javax.ws.rs.Path",
          "elementKind": "annotation",
          "justification": "Align the style with the rest of RestURI constants"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::disposeSolver(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::disposeSolver(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "attribute": "value",
          "oldValue": "\"/{solverId}\"",
          "newValue": "\"{solverId}\"",
          "annotationType": "javax.ws.rs.Path",
          "elementKind": "annotation",
          "justification": "Align the style with the rest of RestURI constants"
        },
        {
          "code": "java.method.removed",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::getBestSolution(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "package": "org.kie.server.remote.rest.optaplanner",
          "classSimpleName": "SolverResource",
          "methodName": "getBestSolution",
          "elementKind": "method",
          "justification": "Renamed to getSolverWithBestSolution"
        },
        {
          "code": "java.method.removed",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::getSolverState(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String)",
          "package": "org.kie.server.remote.rest.optaplanner",
          "classSimpleName": "SolverResource",
          "methodName": "getSolverState",
          "elementKind": "method",
          "justification": "Renamed to getSolver"
        },
        {
          "code": "java.method.removed",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.optaplanner.SolverResource::updateSolverState(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String)",
          "package": "org.kie.server.remote.rest.optaplanner",
          "classSimpleName": "SolverResource",
          "methodName": "updateSolverState",
          "elementKind": "method",
          "justification": "State update logic replaced by SolvePlanningProblemCommand and TerminateSolverEarlyCommand"
        }
      ]
    }
  }
}
