{
  "filters": {
    "revapi": {
      "java": {
        "_comment": "Only classes with javax.ws.rs annotations are included since we want to check only REST API.",
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, e.g. from kie-server-api, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.kie\\.server\\.remote\\.rest\\.jbpm.*"
            ],
            "exclude": [
              "org\\.kie\\.server\\.remote\\.rest\\.jbpm\\.resources"
            ]
          },
          "classes": {
            "_comment": "Classes are excluded, not included, so new classes in future are discovered by revapi.",
            "regex": false,
            "exclude": [
              "org.kie.server.remote.rest.jbpm.JbpmRestApplicationComponentsService"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.33.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
       {
         "code": "java.annotation.attributeValueChanged",
         "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.jbpm.UserTaskResource::saveContent(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.Long, java.lang.String)",
         "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.jbpm.UserTaskResource::saveContent(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.Long, java.lang.String)",
         "annotationType": "io.swagger.annotations.ApiResponses",
         "annotation": "@io.swagger.annotations.ApiResponses({@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 403, message = \"User is not allowed to perform the operation\"), @io.swagger.annotations.ApiResponse(code = 404, message = \"Task with given id not found\")})",
         "attribute": "value",
         "oldValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 404, message = \"Task with given id not found\")}",
         "newValue": "{@io.swagger.annotations.ApiResponse(code = 500, message = \"Unexpected error\"), @io.swagger.annotations.ApiResponse(code = 403, message = \"User is not allowed to perform the operation\"), @io.swagger.annotations.ApiResponse(code = 404, message = \"Task with given id not found\")}",
         "package": "org.kie.server.remote.rest.jbpm",
         "classSimpleName": "UserTaskResource",
         "methodName": "saveContent",
         "elementKind": "method",
         "justification": "new Swagger ApiResponse annotation for not allowed operations"
        }
      ]
    }
  }
}
