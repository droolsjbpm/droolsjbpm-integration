{
  "filters": {
    "revapi": {
      "java": {
        "_comment": "Only classes with javax.ws.rs annotations are included since we want to check only REST API.",
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, e.g. from kie-server-api, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.kie\\.server\\.remote\\.rest\\.casemgmt.*"
            ]
          },
          "classes": {
            "_comment": "Classes are excluded, not included, so new classes in future are discovered by revapi.",
            "regex": false,
            "exclude": [
              "org.kie.server.remote.rest.casemgmt.AbstractCaseResource",
              "org.kie.server.remote.rest.casemgmt.CaseOperation",
              "org.kie.server.remote.rest.casemgmt.CaseRestApplicationComponentsService",
              "org.kie.server.remote.rest.casemgmt.Messages"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.5.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method void org.kie.server.remote.rest.casemgmt.CaseAdminResource::<init>(org.kie.server.services.casemgmt.CaseManagementRuntimeDataServiceBase, org.kie.server.services.api.KieServerRegistry)",
          "new": "method void org.kie.server.remote.rest.casemgmt.CaseAdminResource::<init>(org.kie.server.services.casemgmt.CaseManagementRuntimeDataServiceBase, org.kie.server.services.casemgmt.CaseAdminServiceBase, org.kie.server.services.api.KieServerRegistry)",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseAdminResource",
          "methodName": "<init>",
          "elementKind": "constructor",
          "justification": "Added support for case instance migration"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseAdminResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseAdminResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "annotationType": "javax.ws.rs.Path",
          "annotation": "@javax.ws.rs.Path(\"cases\/instances\")",
          "attribute": "value",
          "oldValue": "\"instances\"",
          "newValue": "\"cases\/instances\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseAdminResource",
          "methodName": "getCaseInstances",
          "elementKind": "method",
          "justification": "Refactored case admin URI to allow fine grained control while keeping backward compatibility on existing endpoints"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "class org.kie.server.remote.rest.casemgmt.CaseAdminResource",
          "new": "class org.kie.server.remote.rest.casemgmt.CaseAdminResource",
          "annotationType": "javax.ws.rs.Path",
          "annotation": "@javax.ws.rs.Path(\"server\/admin\")",
          "attribute": "value",
          "oldValue": "\"server\/admin\/cases\"",
          "newValue": "\"server\/admin\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseAdminResource",
          "elementKind": "class",
          "justification": "Refactored case admin URI to allow fine grained control while keeping backward compatibility on existing endpoints"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseAdminResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseAdminResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiOperation",
          "annotation": "@io.swagger.annotations.ApiOperation(value = \"Retrieves case instances without authentication checks and applies pagination\", response = org.kie.server.api.model.cases.CaseInstanceList.class, code = 200)",
          "attribute": "value",
          "oldValue": "\"Retrieves case instances without authntication checks and applies pagination\"",
          "newValue": "\"Retrieves case instances without authentication checks and applies pagination\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseAdminResource",
          "methodName": "getCaseInstances",
          "elementKind": "method",
          "justification": "Minor change in Swagger docs"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseQueryResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseQueryResource::getCaseInstances(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.lang.String, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiOperation",
          "annotation": "@io.swagger.annotations.ApiOperation(value = \"Retrieves case instances with authentication checks and applies pagination, allows to filter by data (case file) name and value, owner and case instance status\", response = org.kie.server.api.model.cases.CaseInstanceList.class, code = 200)",
          "attribute": "value",
          "oldValue": "\"Retrieves case instances with authntication checks and applies pagination, allows to filter by data (case file) name and value, owner and case instance status\"",
          "newValue": "\"Retrieves case instances with authentication checks and applies pagination, allows to filter by data (case file) name and value, owner and case instance status\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseQueryResource",
          "methodName": "getCaseInstances",
          "elementKind": "method",
          "justification": "Minor change in Swagger docs"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseQueryResource::getCaseInstancesByRole(javax.ws.rs.core.HttpHeaders, java.lang.String, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseQueryResource::getCaseInstancesByRole(javax.ws.rs.core.HttpHeaders, java.lang.String, java.util.List<java.lang.String>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiOperation",
          "annotation": "@io.swagger.annotations.ApiOperation(value = \"Retrieves case instances where user is involved in given role and applies pagination, allows to filter by case instance status\", response = org.kie.server.api.model.cases.CaseInstanceList.class, code = 200)",
          "attribute": "value",
          "oldValue": "\"Retrieves case instances where given user is involed in given role and applies pagination, allows to filter by case instance status\"",
          "newValue": "\"Retrieves case instances where user is involved in given role and applies pagination, allows to filter by case instance status\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseQueryResource",
          "methodName": "getCaseInstancesByRole",
          "elementKind": "method",
          "justification": ""
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseResource::cancelCaseInstance(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseResource::cancelCaseInstance(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiOperation",
          "annotation": "@io.swagger.annotations.ApiOperation(value = \"Cancels case instance with given identifier (case id) and has optional flag to permanently destroy the case instance\", response = java.lang.Void.class, code = 204)",
          "attribute": "value",
          "oldValue": "\"Cancels case instance with given identifier (case id) it can also when intructed permanently destroy the case instance\"",
          "newValue": "\"Cancels case instance with given identifier (case id) and has optional flag to permanently destroy the case instance\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseResource",
          "methodName": "cancelCaseInstance",
          "elementKind": "method",
          "justification": "Minor change in Swagger docs"
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseResource::getCaseInstanceProcessInstance(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.util.List<java.lang.Integer>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "new": "method javax.ws.rs.core.Response org.kie.server.remote.rest.casemgmt.CaseResource::getCaseInstanceProcessInstance(javax.ws.rs.core.HttpHeaders, java.lang.String, java.lang.String, java.util.List<java.lang.Integer>, java.lang.Integer, java.lang.Integer, java.lang.String, boolean)",
          "annotationType": "io.swagger.annotations.ApiOperation",
          "annotation": "@io.swagger.annotations.ApiOperation(value = \"Retrieves process instances that compose complete case instance\", response = org.kie.server.api.model.instance.ProcessInstanceList.class, code = 200)",
          "attribute": "value",
          "oldValue": "\"Retrieves process isntances that compose complete case instance\"",
          "newValue": "\"Retrieves process instances that compose complete case instance\"",
          "package": "org.kie.server.remote.rest.casemgmt",
          "classSimpleName": "CaseResource",
          "methodName": "getCaseInstanceProcessInstance",
          "elementKind": "method",
          "justification": "Minor change in Swagger docs"
        }
      ]
    }
  }
}
